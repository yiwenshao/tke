// +build !ignore_autogenerated

/*
 * Tencent is pleased to support the open source community by making TKEStack
 * available.
 *
 * Copyright (C) 2012-2019 Tencent. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use
 * this file except in compliance with the License. You may obtain a copy of the
 * License at
 *
 * https://opensource.org/licenses/Apache-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OF ANY KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations under the License.
 */

// Code generated by conversion-gen. DO NOT EDIT.

package v1

import (
	unsafe "unsafe"

	conversion "k8s.io/apimachinery/pkg/conversion"
	runtime "k8s.io/apimachinery/pkg/runtime"
	logagent "tkestack.io/tke/api/logagent"
)

func init() {
	localSchemeBuilder.Register(RegisterConversions)
}

// RegisterConversions adds conversion functions to the given scheme.
// Public to allow building arbitrary schemes.
func RegisterConversions(s *runtime.Scheme) error {
	if err := s.AddGeneratedConversionFunc((*APIKeyReq)(nil), (*logagent.APIKeyReq)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1_APIKeyReq_To_logagent_APIKeyReq(a.(*APIKeyReq), b.(*logagent.APIKeyReq), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*logagent.APIKeyReq)(nil), (*APIKeyReq)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_logagent_APIKeyReq_To_v1_APIKeyReq(a.(*logagent.APIKeyReq), b.(*APIKeyReq), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*LogAgent)(nil), (*logagent.LogAgent)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1_LogAgent_To_logagent_LogAgent(a.(*LogAgent), b.(*logagent.LogAgent), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*logagent.LogAgent)(nil), (*LogAgent)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_logagent_LogAgent_To_v1_LogAgent(a.(*logagent.LogAgent), b.(*LogAgent), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*LogAgentList)(nil), (*logagent.LogAgentList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1_LogAgentList_To_logagent_LogAgentList(a.(*LogAgentList), b.(*logagent.LogAgentList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*logagent.LogAgentList)(nil), (*LogAgentList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_logagent_LogAgentList_To_v1_LogAgentList(a.(*logagent.LogAgentList), b.(*LogAgentList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*LogAgentSpec)(nil), (*logagent.LogAgentSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1_LogAgentSpec_To_logagent_LogAgentSpec(a.(*LogAgentSpec), b.(*logagent.LogAgentSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*logagent.LogAgentSpec)(nil), (*LogAgentSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_logagent_LogAgentSpec_To_v1_LogAgentSpec(a.(*logagent.LogAgentSpec), b.(*LogAgentSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*LogAgentStatus)(nil), (*logagent.LogAgentStatus)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1_LogAgentStatus_To_logagent_LogAgentStatus(a.(*LogAgentStatus), b.(*logagent.LogAgentStatus), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*logagent.LogAgentStatus)(nil), (*LogAgentStatus)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_logagent_LogAgentStatus_To_v1_LogAgentStatus(a.(*logagent.LogAgentStatus), b.(*LogAgentStatus), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*LogCollector)(nil), (*logagent.LogCollector)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1_LogCollector_To_logagent_LogCollector(a.(*LogCollector), b.(*logagent.LogCollector), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*logagent.LogCollector)(nil), (*LogCollector)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_logagent_LogCollector_To_v1_LogCollector(a.(*logagent.LogCollector), b.(*LogCollector), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*LogCollectorList)(nil), (*logagent.LogCollectorList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1_LogCollectorList_To_logagent_LogCollectorList(a.(*LogCollectorList), b.(*logagent.LogCollectorList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*logagent.LogCollectorList)(nil), (*LogCollectorList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_logagent_LogCollectorList_To_v1_LogCollectorList(a.(*logagent.LogCollectorList), b.(*LogCollectorList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*LogCollectorSpec)(nil), (*logagent.LogCollectorSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1_LogCollectorSpec_To_logagent_LogCollectorSpec(a.(*LogCollectorSpec), b.(*logagent.LogCollectorSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*logagent.LogCollectorSpec)(nil), (*LogCollectorSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_logagent_LogCollectorSpec_To_v1_LogCollectorSpec(a.(*logagent.LogCollectorSpec), b.(*LogCollectorSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*LogCollectorStatus)(nil), (*logagent.LogCollectorStatus)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1_LogCollectorStatus_To_logagent_LogCollectorStatus(a.(*LogCollectorStatus), b.(*logagent.LogCollectorStatus), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*logagent.LogCollectorStatus)(nil), (*LogCollectorStatus)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_logagent_LogCollectorStatus_To_v1_LogCollectorStatus(a.(*logagent.LogCollectorStatus), b.(*LogCollectorStatus), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*LogFileTree)(nil), (*logagent.LogFileTree)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1_LogFileTree_To_logagent_LogFileTree(a.(*LogFileTree), b.(*logagent.LogFileTree), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*logagent.LogFileTree)(nil), (*LogFileTree)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_logagent_LogFileTree_To_v1_LogFileTree(a.(*logagent.LogFileTree), b.(*LogFileTree), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*LogFileTreeSpec)(nil), (*logagent.LogFileTreeSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1_LogFileTreeSpec_To_logagent_LogFileTreeSpec(a.(*LogFileTreeSpec), b.(*logagent.LogFileTreeSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*logagent.LogFileTreeSpec)(nil), (*LogFileTreeSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_logagent_LogFileTreeSpec_To_v1_LogFileTreeSpec(a.(*logagent.LogFileTreeSpec), b.(*LogFileTreeSpec), scope)
	}); err != nil {
		return err
	}
	return nil
}

func autoConvert_v1_APIKeyReq_To_logagent_APIKeyReq(in *APIKeyReq, out *logagent.APIKeyReq, s conversion.Scope) error {
	out.Expire = in.Expire
	out.Description = in.Description
	if err := Convert_v1_LogFileTreeSpec_To_logagent_LogFileTreeSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1_APIKeyReq_To_logagent_APIKeyReq is an autogenerated conversion function.
func Convert_v1_APIKeyReq_To_logagent_APIKeyReq(in *APIKeyReq, out *logagent.APIKeyReq, s conversion.Scope) error {
	return autoConvert_v1_APIKeyReq_To_logagent_APIKeyReq(in, out, s)
}

func autoConvert_logagent_APIKeyReq_To_v1_APIKeyReq(in *logagent.APIKeyReq, out *APIKeyReq, s conversion.Scope) error {
	out.Expire = in.Expire
	out.Description = in.Description
	if err := Convert_logagent_LogFileTreeSpec_To_v1_LogFileTreeSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	return nil
}

// Convert_logagent_APIKeyReq_To_v1_APIKeyReq is an autogenerated conversion function.
func Convert_logagent_APIKeyReq_To_v1_APIKeyReq(in *logagent.APIKeyReq, out *APIKeyReq, s conversion.Scope) error {
	return autoConvert_logagent_APIKeyReq_To_v1_APIKeyReq(in, out, s)
}

func autoConvert_v1_LogAgent_To_logagent_LogAgent(in *LogAgent, out *logagent.LogAgent, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_v1_LogAgentSpec_To_logagent_LogAgentSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	if err := Convert_v1_LogAgentStatus_To_logagent_LogAgentStatus(&in.Status, &out.Status, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1_LogAgent_To_logagent_LogAgent is an autogenerated conversion function.
func Convert_v1_LogAgent_To_logagent_LogAgent(in *LogAgent, out *logagent.LogAgent, s conversion.Scope) error {
	return autoConvert_v1_LogAgent_To_logagent_LogAgent(in, out, s)
}

func autoConvert_logagent_LogAgent_To_v1_LogAgent(in *logagent.LogAgent, out *LogAgent, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_logagent_LogAgentSpec_To_v1_LogAgentSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	if err := Convert_logagent_LogAgentStatus_To_v1_LogAgentStatus(&in.Status, &out.Status, s); err != nil {
		return err
	}
	return nil
}

// Convert_logagent_LogAgent_To_v1_LogAgent is an autogenerated conversion function.
func Convert_logagent_LogAgent_To_v1_LogAgent(in *logagent.LogAgent, out *LogAgent, s conversion.Scope) error {
	return autoConvert_logagent_LogAgent_To_v1_LogAgent(in, out, s)
}

func autoConvert_v1_LogAgentList_To_logagent_LogAgentList(in *LogAgentList, out *logagent.LogAgentList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	out.Items = *(*[]logagent.LogAgent)(unsafe.Pointer(&in.Items))
	return nil
}

// Convert_v1_LogAgentList_To_logagent_LogAgentList is an autogenerated conversion function.
func Convert_v1_LogAgentList_To_logagent_LogAgentList(in *LogAgentList, out *logagent.LogAgentList, s conversion.Scope) error {
	return autoConvert_v1_LogAgentList_To_logagent_LogAgentList(in, out, s)
}

func autoConvert_logagent_LogAgentList_To_v1_LogAgentList(in *logagent.LogAgentList, out *LogAgentList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	out.Items = *(*[]LogAgent)(unsafe.Pointer(&in.Items))
	return nil
}

// Convert_logagent_LogAgentList_To_v1_LogAgentList is an autogenerated conversion function.
func Convert_logagent_LogAgentList_To_v1_LogAgentList(in *logagent.LogAgentList, out *LogAgentList, s conversion.Scope) error {
	return autoConvert_logagent_LogAgentList_To_v1_LogAgentList(in, out, s)
}

func autoConvert_v1_LogAgentSpec_To_logagent_LogAgentSpec(in *LogAgentSpec, out *logagent.LogAgentSpec, s conversion.Scope) error {
	out.TenantID = in.TenantID
	out.ClusterName = in.ClusterName
	out.Version = in.Version
	return nil
}

// Convert_v1_LogAgentSpec_To_logagent_LogAgentSpec is an autogenerated conversion function.
func Convert_v1_LogAgentSpec_To_logagent_LogAgentSpec(in *LogAgentSpec, out *logagent.LogAgentSpec, s conversion.Scope) error {
	return autoConvert_v1_LogAgentSpec_To_logagent_LogAgentSpec(in, out, s)
}

func autoConvert_logagent_LogAgentSpec_To_v1_LogAgentSpec(in *logagent.LogAgentSpec, out *LogAgentSpec, s conversion.Scope) error {
	out.TenantID = in.TenantID
	out.ClusterName = in.ClusterName
	out.Version = in.Version
	return nil
}

// Convert_logagent_LogAgentSpec_To_v1_LogAgentSpec is an autogenerated conversion function.
func Convert_logagent_LogAgentSpec_To_v1_LogAgentSpec(in *logagent.LogAgentSpec, out *LogAgentSpec, s conversion.Scope) error {
	return autoConvert_logagent_LogAgentSpec_To_v1_LogAgentSpec(in, out, s)
}

func autoConvert_v1_LogAgentStatus_To_logagent_LogAgentStatus(in *LogAgentStatus, out *logagent.LogAgentStatus, s conversion.Scope) error {
	out.Version = in.Version
	out.Phase = logagent.AddonPhase(in.Phase)
	out.Reason = in.Reason
	out.RetryCount = in.RetryCount
	out.LastReInitializingTimestamp = in.LastReInitializingTimestamp
	return nil
}

// Convert_v1_LogAgentStatus_To_logagent_LogAgentStatus is an autogenerated conversion function.
func Convert_v1_LogAgentStatus_To_logagent_LogAgentStatus(in *LogAgentStatus, out *logagent.LogAgentStatus, s conversion.Scope) error {
	return autoConvert_v1_LogAgentStatus_To_logagent_LogAgentStatus(in, out, s)
}

func autoConvert_logagent_LogAgentStatus_To_v1_LogAgentStatus(in *logagent.LogAgentStatus, out *LogAgentStatus, s conversion.Scope) error {
	out.Version = in.Version
	out.Phase = AddonPhase(in.Phase)
	out.Reason = in.Reason
	out.RetryCount = in.RetryCount
	out.LastReInitializingTimestamp = in.LastReInitializingTimestamp
	return nil
}

// Convert_logagent_LogAgentStatus_To_v1_LogAgentStatus is an autogenerated conversion function.
func Convert_logagent_LogAgentStatus_To_v1_LogAgentStatus(in *logagent.LogAgentStatus, out *LogAgentStatus, s conversion.Scope) error {
	return autoConvert_logagent_LogAgentStatus_To_v1_LogAgentStatus(in, out, s)
}

func autoConvert_v1_LogCollector_To_logagent_LogCollector(in *LogCollector, out *logagent.LogCollector, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_v1_LogCollectorSpec_To_logagent_LogCollectorSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	if err := Convert_v1_LogCollectorStatus_To_logagent_LogCollectorStatus(&in.Status, &out.Status, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1_LogCollector_To_logagent_LogCollector is an autogenerated conversion function.
func Convert_v1_LogCollector_To_logagent_LogCollector(in *LogCollector, out *logagent.LogCollector, s conversion.Scope) error {
	return autoConvert_v1_LogCollector_To_logagent_LogCollector(in, out, s)
}

func autoConvert_logagent_LogCollector_To_v1_LogCollector(in *logagent.LogCollector, out *LogCollector, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_logagent_LogCollectorSpec_To_v1_LogCollectorSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	if err := Convert_logagent_LogCollectorStatus_To_v1_LogCollectorStatus(&in.Status, &out.Status, s); err != nil {
		return err
	}
	return nil
}

// Convert_logagent_LogCollector_To_v1_LogCollector is an autogenerated conversion function.
func Convert_logagent_LogCollector_To_v1_LogCollector(in *logagent.LogCollector, out *LogCollector, s conversion.Scope) error {
	return autoConvert_logagent_LogCollector_To_v1_LogCollector(in, out, s)
}

func autoConvert_v1_LogCollectorList_To_logagent_LogCollectorList(in *LogCollectorList, out *logagent.LogCollectorList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	out.Items = *(*[]logagent.LogCollector)(unsafe.Pointer(&in.Items))
	return nil
}

// Convert_v1_LogCollectorList_To_logagent_LogCollectorList is an autogenerated conversion function.
func Convert_v1_LogCollectorList_To_logagent_LogCollectorList(in *LogCollectorList, out *logagent.LogCollectorList, s conversion.Scope) error {
	return autoConvert_v1_LogCollectorList_To_logagent_LogCollectorList(in, out, s)
}

func autoConvert_logagent_LogCollectorList_To_v1_LogCollectorList(in *logagent.LogCollectorList, out *LogCollectorList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	out.Items = *(*[]LogCollector)(unsafe.Pointer(&in.Items))
	return nil
}

// Convert_logagent_LogCollectorList_To_v1_LogCollectorList is an autogenerated conversion function.
func Convert_logagent_LogCollectorList_To_v1_LogCollectorList(in *logagent.LogCollectorList, out *LogCollectorList, s conversion.Scope) error {
	return autoConvert_logagent_LogCollectorList_To_v1_LogCollectorList(in, out, s)
}

func autoConvert_v1_LogCollectorSpec_To_logagent_LogCollectorSpec(in *LogCollectorSpec, out *logagent.LogCollectorSpec, s conversion.Scope) error {
	out.TenantID = in.TenantID
	out.ClusterName = in.ClusterName
	out.Description = in.Description
	return nil
}

// Convert_v1_LogCollectorSpec_To_logagent_LogCollectorSpec is an autogenerated conversion function.
func Convert_v1_LogCollectorSpec_To_logagent_LogCollectorSpec(in *LogCollectorSpec, out *logagent.LogCollectorSpec, s conversion.Scope) error {
	return autoConvert_v1_LogCollectorSpec_To_logagent_LogCollectorSpec(in, out, s)
}

func autoConvert_logagent_LogCollectorSpec_To_v1_LogCollectorSpec(in *logagent.LogCollectorSpec, out *LogCollectorSpec, s conversion.Scope) error {
	out.TenantID = in.TenantID
	out.ClusterName = in.ClusterName
	out.Description = in.Description
	return nil
}

// Convert_logagent_LogCollectorSpec_To_v1_LogCollectorSpec is an autogenerated conversion function.
func Convert_logagent_LogCollectorSpec_To_v1_LogCollectorSpec(in *logagent.LogCollectorSpec, out *LogCollectorSpec, s conversion.Scope) error {
	return autoConvert_logagent_LogCollectorSpec_To_v1_LogCollectorSpec(in, out, s)
}

func autoConvert_v1_LogCollectorStatus_To_logagent_LogCollectorStatus(in *LogCollectorStatus, out *logagent.LogCollectorStatus, s conversion.Scope) error {
	out.Input = in.Input
	out.Output = in.Output
	return nil
}

// Convert_v1_LogCollectorStatus_To_logagent_LogCollectorStatus is an autogenerated conversion function.
func Convert_v1_LogCollectorStatus_To_logagent_LogCollectorStatus(in *LogCollectorStatus, out *logagent.LogCollectorStatus, s conversion.Scope) error {
	return autoConvert_v1_LogCollectorStatus_To_logagent_LogCollectorStatus(in, out, s)
}

func autoConvert_logagent_LogCollectorStatus_To_v1_LogCollectorStatus(in *logagent.LogCollectorStatus, out *LogCollectorStatus, s conversion.Scope) error {
	out.Input = in.Input
	out.Output = in.Output
	return nil
}

// Convert_logagent_LogCollectorStatus_To_v1_LogCollectorStatus is an autogenerated conversion function.
func Convert_logagent_LogCollectorStatus_To_v1_LogCollectorStatus(in *logagent.LogCollectorStatus, out *LogCollectorStatus, s conversion.Scope) error {
	return autoConvert_logagent_LogCollectorStatus_To_v1_LogCollectorStatus(in, out, s)
}

func autoConvert_v1_LogFileTree_To_logagent_LogFileTree(in *LogFileTree, out *logagent.LogFileTree, s conversion.Scope) error {
	if err := Convert_v1_LogFileTreeSpec_To_logagent_LogFileTreeSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1_LogFileTree_To_logagent_LogFileTree is an autogenerated conversion function.
func Convert_v1_LogFileTree_To_logagent_LogFileTree(in *LogFileTree, out *logagent.LogFileTree, s conversion.Scope) error {
	return autoConvert_v1_LogFileTree_To_logagent_LogFileTree(in, out, s)
}

func autoConvert_logagent_LogFileTree_To_v1_LogFileTree(in *logagent.LogFileTree, out *LogFileTree, s conversion.Scope) error {
	if err := Convert_logagent_LogFileTreeSpec_To_v1_LogFileTreeSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	return nil
}

// Convert_logagent_LogFileTree_To_v1_LogFileTree is an autogenerated conversion function.
func Convert_logagent_LogFileTree_To_v1_LogFileTree(in *logagent.LogFileTree, out *LogFileTree, s conversion.Scope) error {
	return autoConvert_logagent_LogFileTree_To_v1_LogFileTree(in, out, s)
}

func autoConvert_v1_LogFileTreeSpec_To_logagent_LogFileTreeSpec(in *LogFileTreeSpec, out *logagent.LogFileTreeSpec, s conversion.Scope) error {
	out.ClusterId = in.ClusterId
	out.Namespace = in.Namespace
	out.Name = in.Name
	out.Container = in.Container
	out.Pod = in.Pod
	return nil
}

// Convert_v1_LogFileTreeSpec_To_logagent_LogFileTreeSpec is an autogenerated conversion function.
func Convert_v1_LogFileTreeSpec_To_logagent_LogFileTreeSpec(in *LogFileTreeSpec, out *logagent.LogFileTreeSpec, s conversion.Scope) error {
	return autoConvert_v1_LogFileTreeSpec_To_logagent_LogFileTreeSpec(in, out, s)
}

func autoConvert_logagent_LogFileTreeSpec_To_v1_LogFileTreeSpec(in *logagent.LogFileTreeSpec, out *LogFileTreeSpec, s conversion.Scope) error {
	out.ClusterId = in.ClusterId
	out.Namespace = in.Namespace
	out.Name = in.Name
	out.Container = in.Container
	out.Pod = in.Pod
	return nil
}

// Convert_logagent_LogFileTreeSpec_To_v1_LogFileTreeSpec is an autogenerated conversion function.
func Convert_logagent_LogFileTreeSpec_To_v1_LogFileTreeSpec(in *logagent.LogFileTreeSpec, out *LogFileTreeSpec, s conversion.Scope) error {
	return autoConvert_logagent_LogFileTreeSpec_To_v1_LogFileTreeSpec(in, out, s)
}
